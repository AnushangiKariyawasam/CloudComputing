trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: DevAndTest
  jobs:
  - job: DevAndTestJob
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'CloudComputing_AzurePortal'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
     	  docker build -t cloudcomputingcontainer.azurecr.io/database-app:latest database-service
          docker build -t cloudcomputingcontainer.azurecr.io/gui-app:latest app-service
          docker build -t cloudcomputingcontainer.azurecr.io/metrics-app:latest metrics-service
          az acr login -n cloudcomputingcontainer
          docker push cloudcomputingcontainer.azurecr.io/database-app:latest
          docker push cloudcomputingcontainer.azurecr.io/gui-app:latest
          docker push cloudcomputingcontainer.azurecr.io/metrics-app:latest
          az aks browse --resource-group CloudComputing --name CloudComputingKCluster

    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'CloudComputing_AzurePortal'
        azureResourceGroup: 'CloudComputing'
        kubernetesCluster: 'CloudComputingKCluster'
        namespace: 'default'
        command: 'apply'
        useConfigurationFile: true
        configuration: 'k8'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        azureSubscriptionEndpointForSecrets: 'CloudComputing_AzurePortal'
        azureContainerRegistry: 'cloudcomputingcontainer.azurecr.io'
        forceUpdate: false
    - script: 'curl -sSf http://40.88.222.150:8002'
      displayName: 'Testing Application...'
      condition: succeededOrFailed()
- stage: ProdDeployment
  dependsOn: DevAndTest
  jobs:
  - job: ProdDeploymentJob
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'CloudComputing_AzurePortal'
        azureResourceGroup: 'CloudComputing'
        kubernetesCluster: 'CloudComputingKCluster'
        namespace: 'default'
        command: 'apply'
        useConfigurationFile: true
        configuration: 'k8-prod'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        azureSubscriptionEndpointForSecrets: 'CloudComputing_AzurePortal'
        azureContainerRegistry: 'cloudcomputingcontainer.azurecr.io'
        forceUpdate: false
